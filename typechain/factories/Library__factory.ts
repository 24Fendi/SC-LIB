/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Library, LibraryInterface } from "../Library";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ISBN",
        type: "address",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_year",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_author",
        type: "string",
      },
    ],
    name: "addBook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bookDetail",
    outputs: [
      {
        internalType: "address",
        name: "ISBN",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "year",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "author",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ISBN",
        type: "address",
      },
    ],
    name: "getBookByISBN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLogs",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "action",
            type: "string",
          },
          {
            internalType: "address",
            name: "ISBN",
            type: "address",
          },
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
        ],
        internalType: "struct Library.Log[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ISBN",
        type: "address",
      },
    ],
    name: "removeBook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ISBN",
        type: "address",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_year",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_author",
        type: "string",
      },
    ],
    name: "updateBook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600280546001600160a01b031916331790556115e1806100326000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d3f3a0191161005b578063d3f3a019146100f2578063e125fa9314610105578063f851a44014610118578063fe290ccb1461014357600080fd5b80630ad727b71461008d578063609debbb146100b95780637f6d85a5146100ca578063c3951f77146100df575b600080fd5b6100a061009b36600461101e565b610158565b6040516100b09493929190611086565b60405180910390f35b6001546040519081526020016100b0565b6100dd6100d8366004611116565b61029b565b005b6100dd6100ed36600461101e565b6106b4565b6100a061010036600461101e565b61099a565b6100dd610113366004611116565b610bb5565b60025461012b906001600160a01b031681565b6040516001600160a01b0390911681526020016100b0565b61014b610e96565b6040516100b091906111a0565b600060208190529081526040902080546001820180546001600160a01b0390921692916101849061122c565b80601f01602080910402602001604051908101604052809291908181526020018280546101b09061122c565b80156101fd5780601f106101d2576101008083540402835291602001916101fd565b820191906000526020600020905b8154815290600101906020018083116101e057829003601f168201915b5050505050908060020154908060030180546102189061122c565b80601f01602080910402602001604051908101604052809291908181526020018280546102449061122c565b80156102915780601f1061026657610100808354040283529160200191610291565b820191906000526020600020905b81548152906001019060200180831161027457829003601f168201915b5050505050905084565b6002546001600160a01b031633146102ce5760405162461bcd60e51b81526004016102c590611266565b60405180910390fd5b6001600160a01b0386166102f45760405162461bcd60e51b81526004016102c5906112ab565b836103395760405162461bcd60e51b81526020600482015260156024820152745469746c652063616e6e6f7420626520656d70747960581b60448201526064016102c5565b600083116103895760405162461bcd60e51b815260206004820152601b60248201527f59656172206d7573742062652067726561746572207468616e2030000000000060448201526064016102c5565b806103cf5760405162461bcd60e51b8152602060048201526016602482015275417574686f722063616e6e6f7420626520656d70747960501b60448201526064016102c5565b60005b6001548110156105e957866001600160a01b0316600182815481106103f9576103f96112d9565b60009182526020909120600490910201546001600160a01b0316036105d7576040518060800160405280886001600160a01b0316815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602080820187905260408051601f87018390048302810183018252868152920191908690869081908401838280828437600092019190915250505091525060018054839081106104bd576104bd6112d9565b600091825260209182902083516004929092020180546001600160a01b0319166001600160a01b039092169190911781559082015160018201906105019082611350565b5060408201516002820155606082015160038201906105209082611350565b50506040805160a081018252600b606082019081526a55706461746520426f6f6b60a81b608083015281526001600160a01b038a16602082015260019181018290526003805492830181556000528051909250600290910260008051602061158c833981519152019081906105959082611350565b506020820151600190910180546040909301511515600160a01b026001600160a81b03199093166001600160a01b0390921691909117919091179055506106ac565b806105e181611426565b9150506103d2565b506040805160a081018252600b606082019081526a55706461746520426f6f6b60a81b608083015281526001600160a01b038816602082015260009181018290526003805460018101825592528051909160020260008051602061158c8339815191520190819061065a9082611350565b506020820151600190910180546040938401511515600160a01b026001600160a81b03199091166001600160a01b03909316929092179190911790555162461bcd60e51b81526102c59060040161143f565b505050505050565b6002546001600160a01b031633146106de5760405162461bcd60e51b81526004016102c590611266565b6001600160a01b0381166107045760405162461bcd60e51b81526004016102c5906112ab565b60005b60015481101561092657816001600160a01b03166001828154811061072e5761072e6112d9565b60009182526020909120600490910201546001600160a01b031603610914576001805461075b9190611481565b8110156108065760018054610771908290611481565b81548110610781576107816112d9565b9060005260206000209060040201600182815481106107a2576107a26112d9565b60009182526020909120825460049092020180546001600160a01b0319166001600160a01b039092169190911781556001808201906107e39084018261149a565b506002820154816002015560038201816003019081610802919061149a565b5050505b600180548061081757610817611575565b60008281526020812060046000199093019283020180546001600160a01b0319168155906108486001830182610fb4565b60028201600090556003820160006108609190610fb4565b505090556040805160a081018252600b606082019081526a52656d6f766520426f6f6b60a81b608083015281526001600160a01b038416602082015260019181018290526003805492830181556000528051909160020260008051602061158c833981519152019081906108d49082611350565b506020820151600190910180546040909301511515600160a01b026001600160a81b03199093166001600160a01b03909216919091179190911790555050565b8061091e81611426565b915050610707565b506040805160a081018252600b606082019081526a52656d6f766520426f6f6b60a81b608083015281526001600160a01b038316602082015260009181018290526003805460018101825592528051909160020260008051602061158c8339815191520190819061065a9082611350565b50565b600060606000606060005b600154811015610b9557856001600160a01b0316600182815481106109cc576109cc6112d9565b60009182526020909120600490910201546001600160a01b031603610b8357600060018281548110610a0057610a006112d9565b6000918252602091829020604080516080810190915260049092020180546001600160a01b031682526001810180549293919291840191610a409061122c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6c9061122c565b8015610ab95780601f10610a8e57610100808354040283529160200191610ab9565b820191906000526020600020905b815481529060010190602001808311610a9c57829003601f168201915b5050505050815260200160028201548152602001600382018054610adc9061122c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b089061122c565b8015610b555780601f10610b2a57610100808354040283529160200191610b55565b820191906000526020600020905b815481529060010190602001808311610b3857829003601f168201915b5050505050815250509050806000015181602001518260400151836060015195509550955095505050610bae565b80610b8d81611426565b9150506109a5565b5060405162461bcd60e51b81526004016102c59061143f565b9193509193565b6002546001600160a01b03163314610bdf5760405162461bcd60e51b81526004016102c590611266565b6001600160a01b038616610c055760405162461bcd60e51b81526004016102c5906112ab565b83610c4a5760405162461bcd60e51b81526020600482015260156024820152745469746c652063616e6e6f7420626520656d70747960581b60448201526064016102c5565b60008311610c9a5760405162461bcd60e51b815260206004820152601b60248201527f59656172206d7573742062652067726561746572207468616e2030000000000060448201526064016102c5565b80610ce05760405162461bcd60e51b8152602060048201526016602482015275417574686f722063616e6e6f7420626520656d70747960501b60448201526064016102c5565b60016040518060800160405280886001600160a01b0316815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602080820187905260408051601f870183900483028101830182528681529201919086908690819084018382808284376000920182905250939094525050835460018082018655948252602091829020845160049092020180546001600160a01b0319166001600160a01b0390921691909117815590830151929390929083019150610dc19082611350565b506040820151600282015560608201516003820190610de09082611350565b50506040805160a0810182526008606082019081526741646420426f6f6b60c01b608083015281526001600160a01b038916602082015260019181018290526003805492830181556000528051909250600290910260008051602061158c83398151915201908190610e529082611350565b506020820151600190910180546040909301511515600160a01b026001600160a81b03199093166001600160a01b0390921691909117919091179055505050505050565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610fab5783829060005260206000209060020201604051806060016040529081600082018054610eed9061122c565b80601f0160208091040260200160405190810160405280929190818152602001828054610f199061122c565b8015610f665780601f10610f3b57610100808354040283529160200191610f66565b820191906000526020600020905b815481529060010190602001808311610f4957829003601f168201915b50505091835250506001918201546001600160a01b038116602080840191909152600160a01b90910460ff161515604090920191909152918352929092019101610eba565b50505050905090565b508054610fc09061122c565b6000825580601f10610fd0575050565b601f01602090049060005260206000209081019061099791905b80821115610ffe5760008155600101610fea565b5090565b80356001600160a01b038116811461101957600080fd5b919050565b60006020828403121561103057600080fd5b61103982611002565b9392505050565b6000815180845260005b818110156110665760208185018101518683018201520161104a565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03851681526080602082018190526000906110aa90830186611040565b84604084015282810360608401526110c28185611040565b979650505050505050565b60008083601f8401126110df57600080fd5b50813567ffffffffffffffff8111156110f757600080fd5b60208301915083602082850101111561110f57600080fd5b9250929050565b6000806000806000806080878903121561112f57600080fd5b61113887611002565b9550602087013567ffffffffffffffff8082111561115557600080fd5b6111618a838b016110cd565b909750955060408901359450606089013591508082111561118157600080fd5b5061118e89828a016110cd565b979a9699509497509295939492505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561121e57603f198984030185528151606081518186526111ed82870182611040565b838b01516001600160a01b0316878c01529289015115159589019590955250948701949250908601906001016111c7565b509098975050505050505050565b600181811c9082168061124057607f821691505b60208210810361126057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206f70657260408201526430ba34b7b760d91b606082015260800190565b6020808252601490820152734953424e2063616e6e6f7420626520656d70747960601b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f82111561134b57600081815260208120601f850160051c8101602086101561132c5750805b601f850160051c820191505b818110156106ac57828155600101611338565b505050565b815167ffffffffffffffff81111561136a5761136a6112ef565b61137e81611378845461122c565b84611305565b602080601f8311600181146113b3576000841561139b5750858301515b600019600386901b1c1916600185901b1785556106ac565b600085815260208120601f198616915b828110156113e2578886015182559484019460019091019084016113c3565b50858210156114005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60006001820161143857611438611410565b5060010190565b60208082526022908201527f426f6f6b20776974682074686973204953424e20646f6573206e6f74206578696040820152611cdd60f21b606082015260800190565b8181038181111561149457611494611410565b92915050565b8181036114a5575050565b6114af825461122c565b67ffffffffffffffff8111156114c7576114c76112ef565b6114d581611378845461122c565b6000601f82116001811461150957600083156114f15750848201545b600019600385901b1c1916600184901b17845561156e565b600085815260209020601f19841690600086815260209020845b838110156115435782860154825560019586019590910190602001611523565b50858310156115615781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b634e487b7160e01b600052603160045260246000fdfec2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85ba2646970667358221220edb8b782f035daa19f8b73a607df7c5eba72c2cbb7592e2c589ee198a91d0a9c64736f6c63430008140033";

type LibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Library__factory extends ContractFactory {
  constructor(...args: LibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Library & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Library__factory {
    return super.connect(runner) as Library__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibraryInterface {
    return new Interface(_abi) as LibraryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Library {
    return new Contract(address, _abi, runner) as unknown as Library;
  }
}
